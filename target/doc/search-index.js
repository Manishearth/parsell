var searchIndex = {};
searchIndex['parsimonious'] = {"items":[[0,"","parsimonious","Parsimonious: a parser combinator library for Rust",null,null],[4,"ParseResult","","The result of a parse.",null,null],[13,"Done","","The parse is finished.",0,null],[13,"Continue","","The parse can continue.",0,null],[4,"MaybeParseResult","","The result of a parse.",null,null],[13,"Empty","","The input was empty.",1,null],[13,"Abort","","The parser must backtrack.",1,null],[13,"Commit","","The parser has committed to parsing the input.",1,null],[5,"character","","A parser that reads one character.",null,{"inputs":[{"name":"f"}],"output":{"name":"characterparser"}}],[0,"impls","","Provide implementations of parser traits.",null,null],[3,"Function2","parsimonious::impls","",null,null],[3,"Function3","","",null,null],[3,"Function4","","",null,null],[3,"Function5","","",null,null],[3,"Try","","",null,null],[3,"TryZip","","",null,null],[3,"ZipTry","","",null,null],[3,"TryZipTry","","",null,null],[3,"MapStatefulParser","","",null,null],[3,"MapParser","","",null,null],[3,"AndThenParser","","",null,null],[3,"OrElseGuardedParser","","",null,null],[3,"OrEmitParser","","",null,null],[3,"StarStatefulParser","","",null,null],[3,"PlusParser","","",null,null],[3,"StarParser","","",null,null],[3,"ImpossibleStatefulParser","","",null,null],[3,"CharacterStatefulParser","","",null,null],[3,"CharacterParser","","",null,null],[3,"BufferedGuardedParser","","",null,null],[3,"BufferedStatefulParser","","",null,null],[3,"BoxableParser","","",null,null],[4,"AndThenStatefulParser","","",null,null],[13,"InLhs","","",2,null],[13,"InRhs","","",2,null],[4,"OrElseStatefulParser","","",null,null],[13,"Lhs","","",3,null],[13,"Rhs","","",3,null],[4,"OrEmitStatefulParser","","",null,null],[13,"Unresolved","","",4,null],[13,"Resolved","","",4,null],[11,"fmt","","",5,{"inputs":[{"name":"function2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"function2"}],"output":{"name":"function2"}}],[11,"new","","",5,{"inputs":[{"name":"function2"},{"name":"f"}],"output":{"name":"self"}}],[11,"apply","","",5,null],[11,"fmt","","",6,{"inputs":[{"name":"function3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"function3"}],"output":{"name":"function3"}}],[11,"new","","",6,{"inputs":[{"name":"function3"},{"name":"f"}],"output":{"name":"self"}}],[11,"apply","","",6,null],[11,"fmt","","",7,{"inputs":[{"name":"function4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"function4"}],"output":{"name":"function4"}}],[11,"new","","",7,{"inputs":[{"name":"function4"},{"name":"f"}],"output":{"name":"self"}}],[11,"apply","","",7,null],[11,"fmt","","",8,{"inputs":[{"name":"function5"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"function5"}],"output":{"name":"function5"}}],[11,"new","","",8,{"inputs":[{"name":"function5"},{"name":"f"}],"output":{"name":"self"}}],[11,"apply","","",8,null],[11,"fmt","","",9,{"inputs":[{"name":"try"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"try"}],"output":{"name":"try"}}],[11,"apply","","",9,{"inputs":[{"name":"try"},{"name":"result"}],"output":{"name":"result"}}],[11,"new","","",9,{"inputs":[{"name":"try"},{"name":"f"}],"output":{"name":"try"}}],[11,"fmt","","",10,{"inputs":[{"name":"tryzip"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"tryzip"}],"output":{"name":"tryzip"}}],[11,"apply","","",10,null],[11,"fmt","","",11,{"inputs":[{"name":"ziptry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"ziptry"}],"output":{"name":"ziptry"}}],[11,"apply","","",11,null],[11,"fmt","","",12,{"inputs":[{"name":"tryziptry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"tryziptry"}],"output":{"name":"tryziptry"}}],[11,"apply","","",12,null],[11,"fmt","","",13,{"inputs":[{"name":"mapstatefulparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"mapstatefulparser"}],"output":{"name":"self"}}],[11,"parse","","",13,{"inputs":[{"name":"mapstatefulparser"},{"name":"s"}],"output":{"name":"parseresult"}}],[11,"done","","",13,{"inputs":[{"name":"mapstatefulparser"}],"output":{"name":"output"}}],[11,"fmt","","",14,{"inputs":[{"name":"mapparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"mapparser"}],"output":{"name":"self"}}],[11,"parse","","",14,{"inputs":[{"name":"mapparser"},{"name":"s"}],"output":{"name":"maybeparseresult"}}],[11,"init","","",14,{"inputs":[{"name":"mapparser"}],"output":{"name":"state"}}],[11,"new","","",14,{"inputs":[{"name":"mapparser"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",15,{"inputs":[{"name":"andthenparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"andthenparser"}],"output":{"name":"andthenparser"}}],[11,"init","","",15,{"inputs":[{"name":"andthenparser"}],"output":{"name":"state"}}],[11,"parse","","",15,{"inputs":[{"name":"andthenparser"},{"name":"s"}],"output":{"name":"maybeparseresult"}}],[11,"fmt","","",2,{"inputs":[{"name":"andthenstatefulparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"andthenstatefulparser"}],"output":{"name":"andthenstatefulparser"}}],[11,"parse","","",2,{"inputs":[{"name":"andthenstatefulparser"},{"name":"s"}],"output":{"name":"parseresult"}}],[11,"done","","",2,{"inputs":[{"name":"andthenstatefulparser"}],"output":{"name":"output"}}],[11,"new","","",15,{"inputs":[{"name":"andthenparser"},{"name":"p"},{"name":"q"}],"output":{"name":"self"}}],[11,"fmt","","",16,{"inputs":[{"name":"orelseguardedparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"orelseguardedparser"}],"output":{"name":"orelseguardedparser"}}],[11,"parse","","",16,{"inputs":[{"name":"orelseguardedparser"},{"name":"s"}],"output":{"name":"maybeparseresult"}}],[11,"new","","",16,{"inputs":[{"name":"orelseguardedparser"},{"name":"p"},{"name":"q"}],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"orelsestatefulparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"orelsestatefulparser"}],"output":{"name":"orelsestatefulparser"}}],[11,"parse","","",3,{"inputs":[{"name":"orelsestatefulparser"},{"name":"s"}],"output":{"name":"parseresult"}}],[11,"done","","",3,{"inputs":[{"name":"orelsestatefulparser"}],"output":{"name":"output"}}],[11,"fmt","","",4,{"inputs":[{"name":"oremitstatefulparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"oremitstatefulparser"}],"output":{"name":"self"}}],[11,"parse","","",4,{"inputs":[{"name":"oremitstatefulparser"},{"name":"s"}],"output":{"name":"parseresult"}}],[11,"done","","",4,{"inputs":[{"name":"oremitstatefulparser"}],"output":{"name":"output"}}],[11,"clone","","",17,{"inputs":[{"name":"oremitparser"}],"output":{"name":"self"}}],[11,"init","","",17,{"inputs":[{"name":"oremitparser"}],"output":{"name":"state"}}],[11,"new","","",17,{"inputs":[{"name":"oremitparser"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",18,{"inputs":[{"name":"starstatefulparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"starstatefulparser"}],"output":{"name":"starstatefulparser"}}],[11,"parse","","",18,{"inputs":[{"name":"starstatefulparser"},{"name":"s"}],"output":{"name":"parseresult"}}],[11,"done","","",18,{"inputs":[{"name":"starstatefulparser"}],"output":{"name":"t"}}],[11,"fmt","","",19,{"inputs":[{"name":"plusparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"plusparser"}],"output":{"name":"self"}}],[11,"parse","","",19,{"inputs":[{"name":"plusparser"},{"name":"s"}],"output":{"name":"maybeparseresult"}}],[11,"new","","",19,{"inputs":[{"name":"plusparser"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",20,{"inputs":[{"name":"starparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"starparser"}],"output":{"name":"self"}}],[11,"init","","",20,{"inputs":[{"name":"starparser"}],"output":{"name":"state"}}],[11,"new","","",20,{"inputs":[{"name":"starparser"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",21,{"inputs":[{"name":"impossiblestatefulparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"impossiblestatefulparser"}],"output":{"name":"impossiblestatefulparser"}}],[11,"parse","","",21,{"inputs":[{"name":"impossiblestatefulparser"},{"name":"s"}],"output":{"name":"parseresult"}}],[11,"done","","",21,{"inputs":[{"name":"impossiblestatefulparser"}],"output":{"name":"t"}}],[11,"fmt","","",22,{"inputs":[{"name":"characterstatefulparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"characterstatefulparser"}],"output":{"name":"self"}}],[11,"parse","","",22,{"inputs":[{"name":"characterstatefulparser"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",22,{"inputs":[{"name":"characterstatefulparser"}],"output":{"name":"option"}}],[11,"fmt","","",23,{"inputs":[{"name":"characterparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"characterparser"}],"output":{"name":"self"}}],[11,"parse","","",23,{"inputs":[{"name":"characterparser"},{"name":"str"}],"output":{"name":"maybeparseresult"}}],[11,"new","","",23,{"inputs":[{"name":"characterparser"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"bufferedguardedparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"bufferedguardedparser"}],"output":{"name":"bufferedguardedparser"}}],[11,"parse","","",24,{"inputs":[{"name":"bufferedguardedparser"},{"name":"str"}],"output":{"name":"maybeparseresult"}}],[11,"new","","",24,{"inputs":[{"name":"bufferedguardedparser"},{"name":"p"}],"output":{"name":"self"}}],[11,"fmt","","",25,{"inputs":[{"name":"bufferedstatefulparser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"bufferedstatefulparser"}],"output":{"name":"bufferedstatefulparser"}}],[11,"parse","","",25,{"inputs":[{"name":"bufferedstatefulparser"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",25,{"inputs":[{"name":"bufferedstatefulparser"}],"output":{"name":"output"}}],[11,"parse_boxable","","",26,{"inputs":[{"name":"boxableparser"},{"name":"s"}],"output":{"name":"option"}}],[11,"done_boxable","","",26,{"inputs":[{"name":"boxableparser"}],"output":{"name":"output"}}],[11,"parse","alloc::boxed","",27,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"parseresult"}}],[11,"done","","",27,{"inputs":[{"name":"box"}],"output":{"name":"output"}}],[11,"new","parsimonious::impls","",26,{"inputs":[{"name":"boxableparser"},{"name":"p"}],"output":{"name":"self"}}],[8,"Stateful","parsimonious","A trait for stateful parsers.",null,null],[16,"Output","","The type of the data being produced by the parser.",28,null],[10,"parse","","Provides data to the parser.",28,{"inputs":[{"name":"stateful"},{"name":"s"}],"output":{"name":"parseresult"}}],[10,"done","","Tells the parser that it will not receive any more data.",28,{"inputs":[{"name":"stateful"}],"output":{"name":"output"}}],[11,"boxable","","Make this parser boxable.",28,{"inputs":[{"name":"stateful"}],"output":{"name":"boxableparser"}}],[8,"Committed","","A trait for committed parsers.",null,null],[16,"Output","","The type of the data being produced by the parser.",29,null],[16,"State","","The type of the parser state.",29,null],[10,"init","","Create a stateful parser by initializing a stateless parser.",29,{"inputs":[{"name":"committed"}],"output":{"name":"state"}}],[11,"and_then","","Sequencing with a committed parser (returns a committed parser).",29,{"inputs":[{"name":"committed"},{"name":"p"}],"output":{"name":"andthenparser"}}],[11,"try_and_then","","Sequencing with a committed parser (returns a committed parser which produces an error when this parser returns an error).",29,{"inputs":[{"name":"committed"},{"name":"p"}],"output":{"name":"mapparser"}}],[11,"and_then_try","","Sequencing with a committed parser (returns a committed parser which produces an error when the other parser returns an error).",29,{"inputs":[{"name":"committed"},{"name":"p"}],"output":{"name":"mapparser"}}],[11,"try_and_then_try","","Sequencing with a committed parser (returns a committed parser which produces an error when the other parser returns an error).",29,{"inputs":[{"name":"committed"},{"name":"p"}],"output":{"name":"mapparser"}}],[11,"map","","Apply a function to the result (returns a committed parser).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"map2","","Apply a 2-arguent function to the result (returns a committed parser).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"map3","","Apply a 3-arguent function to the result (returns a committed parser).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"map4","","Apply a 4-arguent function to the result (returns a committed parser).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"map5","","Apply a 5-arguent function to the result (returns a committed parser).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map","","Apply a function to the result (returns a committed parser which produces an error when this parser returns an error).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map2","","Apply a 2-argument function to the result (returns a committed parser which produces an error when this parser returns an error).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map3","","Apply a 3-argument function to the result (returns a committed parser which produces an error when this parser returns an error).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map4","","Apply a 4-argument function to the result (returns a committed parser which produces an error when this parser returns an error).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map5","","Apply a 5-argument function to the result (returns a committed parser which produces an error when this parser returns an error).",29,{"inputs":[{"name":"committed"},{"name":"f"}],"output":{"name":"mapparser"}}],[8,"Parser","","A trait for stateless parsers.",null,null],[16,"Output","","The type of the data being produced by the parser.",30,null],[16,"State","","The type of the parser state.",30,null],[10,"parse","","Provides data to the parser.",30,{"inputs":[{"name":"parser"},{"name":"s"}],"output":{"name":"maybeparseresult"}}],[11,"or_else","","Choice between parsers (returns a parser).",30,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"orelseguardedparser"}}],[11,"or_emit","","Gives a parser a default value (returns a committed parser).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"oremitparser"}}],[11,"and_then","","Sequencing with a parser (returns a parser).",30,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"andthenparser"}}],[11,"try_and_then","","Sequencing with a committed parser (returns a parser which produces an error when this parser produces an error).",30,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"mapparser"}}],[11,"and_then_try","","Sequencing with a committed parser (returns a parser which produces an error when the other parser produces an error).",30,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"mapparser"}}],[11,"try_and_then_try","","Sequencing with a committed parser (returns a parser which produces an error when either parser produces an error).",30,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"mapparser"}}],[11,"plus","","Iterate one or more times (returns a parser).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"plusparser"}}],[11,"star","","Iterate zero or more times (returns a committed parser).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"starparser"}}],[11,"map","","Apply a function to the result (returns a parser).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"map2","","Apply a 2-arguent function to the result (returns a parser).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"map3","","Apply a 3-arguent function to the result (returns a parser).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"map4","","Apply a 4-arguent function to the result (returns a parser).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"map5","","Apply a 5-arguent function to the result (returns a parser).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map","","Apply a function to the result (returns a parser which produces an error when this parser produces an error).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map2","","Apply a 2-argument function to the result (returns a parser which produces an error when this parser produces an error).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map3","","Apply a 3-argument function to the result (returns a parser which produces an error when this parser produces an error).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map4","","Apply a 4-argument function to the result (returns a parser which produces an error when this parser produces an error).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"try_map5","","Apply a 5-argument function to the result (returns a parser which produces an error when this parser produces an error).",30,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"mapparser"}}],[11,"buffer","","A parser which produces its input.",30,{"inputs":[{"name":"parser"}],"output":{"name":"bufferedguardedparser"}}],[8,"Boxable","","A trait for boxable parsers.",null,null],[16,"Output","","",31,null],[10,"parse_boxable","","",31,{"inputs":[{"name":"boxable"},{"name":"s"}],"output":{"name":"option"}}],[10,"done_boxable","","",31,{"inputs":[{"name":"boxable"}],"output":{"name":"output"}}],[8,"Function","","A trait for one-argument functions.",null,null],[16,"Output","","",32,null],[10,"apply","","",32,{"inputs":[{"name":"function"},{"name":"t"}],"output":{"name":"output"}}],[8,"Factory","","A trait for factories.",null,null],[16,"Output","","",33,null],[10,"build","","",33,{"inputs":[{"name":"factory"}],"output":{"name":"output"}}],[8,"Consumer","","A trait for consumers of data, typically buffers.",null,null],[10,"accept","","Accepts data.",34,{"inputs":[{"name":"consumer"},{"name":"t"}],"output":null}],[11,"map","","Apply a function the the `Continue` branch of a parse result.",0,{"inputs":[{"name":"parseresult"},{"name":"f"}],"output":{"name":"parseresult"}}],[11,"map","","Apply a function the the Commit branch of a parse result",1,{"inputs":[{"name":"maybeparseresult"},{"name":"f"}],"output":{"name":"maybeparseresult"}}],[11,"accept","collections::string","",35,{"inputs":[{"name":"string"},{"name":"string"}],"output":null}],[11,"accept","","",35,{"inputs":[{"name":"string"},{"name":"str"}],"output":null}],[11,"accept","","",35,{"inputs":[{"name":"string"},{"name":"char"}],"output":null}],[11,"accept","collections::vec","",36,null],[11,"accept","","",36,{"inputs":[{"name":"vec"},{"name":"t"}],"output":null}],[11,"accept","core::result","",37,{"inputs":[{"name":"result"},{"name":"result"}],"output":null}]],"paths":[[4,"ParseResult"],[4,"MaybeParseResult"],[4,"AndThenStatefulParser"],[4,"OrElseStatefulParser"],[4,"OrEmitStatefulParser"],[3,"Function2"],[3,"Function3"],[3,"Function4"],[3,"Function5"],[3,"Try"],[3,"TryZip"],[3,"ZipTry"],[3,"TryZipTry"],[3,"MapStatefulParser"],[3,"MapParser"],[3,"AndThenParser"],[3,"OrElseGuardedParser"],[3,"OrEmitParser"],[3,"StarStatefulParser"],[3,"PlusParser"],[3,"StarParser"],[3,"ImpossibleStatefulParser"],[3,"CharacterStatefulParser"],[3,"CharacterParser"],[3,"BufferedGuardedParser"],[3,"BufferedStatefulParser"],[3,"BoxableParser"],[3,"Box"],[8,"Stateful"],[8,"Committed"],[8,"Parser"],[8,"Boxable"],[8,"Function"],[8,"Factory"],[8,"Consumer"],[3,"String"],[3,"Vec"],[4,"Result"]]};
initSearch(searchIndex);
